import telebot, monobank, sqlite3,  time,threading
from telebot import types
from config import BotToken, AdminId

ApiToken=''#–ü–µ—Ä–µ–¥–∞—á–∞ –ª–∞—Å—Ç —Ç–æ–∫–µ–Ω–∞ –≤ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
TokenList={}#–ü–µ—Ä–µ–¥–∞—á–∞ —Å–ª–æ–≤–∞—Ä—è —Ç–æ–∫–µ–Ω–æ–≤ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è false –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞—Ö –∏–∑-–∑–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ (1 –∑–∞–ø—Ä–æ—Å –≤ 60 —Å–µ–∫—É–Ω–¥)
TokenAct=''#–ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ä—Ç–∞—Ö
IdAct=''#–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∏–¥ –∫–∞—Ä—Ç—ã
BalanceAct={}#–ë–∞–ª–∞–Ω—Å—ã –≤—Å–µ—Ö –∫–∞—Ä—Ç –∏ –±–∞–Ω–æ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π
currency=''#–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å
bot=telebot.TeleBot(BotToken)

connect=sqlite3.connect('tokens.db')
cursor=connect.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS tokens(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    token TEXT,
    activate INTEGER,
    notif INTEGER
)""")




@bot.message_handler()
def ms(message):
    if message.chat.id==AdminId: 
        if message.text=='/start':
            connect  = sqlite3.connect('tokens.db')
            cursor = connect.cursor()
            cursor.execute(f'SELECT COUNT (id) FROM tokens')
            connect.commit()
            if cursor.fetchall()[0][0] == 0:
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1='‚ûï–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω'
                klava.add(button1)
                bot.send_message(message.chat.id,'–¢—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª —Ç–æ–∫–µ–Ω(—ã) –≤ –±–æ—Ç–∞!',reply_markup=klava)
            else:
                menu(message)
        elif message.text=='‚ûï–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω':
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1='üßê –ì–¥–µ –µ–≥–æ –≤–∑—è—Ç—å?'
            button2='üèö–ú–µ–Ω—é'
            klava.add(button1,button2)
            InputToken=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ —Å–≤–æ–π API —Ç–æ–∫–µ–Ω:',reply_markup=klava)
            bot.register_next_step_handler(InputToken,InputToken_def)
        elif message.text=='‚ûñ–£–¥–∞–ª–∏—Ç—å  —Ç–æ–∫–µ–Ω':
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1='üèö–ú–µ–Ω—é'
            klava.add(button1)
            InputTokenForDel=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ Id —Ç–æ–∫–µ–Ω–∞:',reply_markup=klava)
            bot.register_next_step_handler(InputTokenForDel,InputTokenForDel_def)
        elif message.text=='üóí–°–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤':
            connect  = sqlite3.connect('tokens.db')
            cursor = connect.cursor()
            cursor.execute(f'SELECT COUNT (id) FROM tokens')
            connect.commit()
            maxTokens=cursor.fetchall()[0][0]
            if maxTokens == 0:
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1='‚ûï–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω'
                klava.add(button1)
                bot.send_message(message.chat.id,'–¢—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª —Ç–æ–∫–µ–Ω(—ã) –≤ –±–æ—Ç–∞!',reply_markup=klava)
            else:
                text=''
                IsAnyActivate=False#–î–ª—è  –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤. –ú–± –≤—Å–µ —É–¥–∞–ª–µ–Ω—ã
                for i in  range(maxTokens):
                    connect  = sqlite3.connect('tokens.db')
                    cursor = connect.cursor()
                    cursor.execute(f'SELECT token FROM tokens WHERE id=?',(i+1,))
                    token=cursor.fetchall()[0][0]
                    cursor.execute(f'SELECT name FROM tokens WHERE id=?',(i+1,))
                    name=cursor.fetchall()[0][0]
                    cursor.execute(f'SELECT activate FROM tokens WHERE id=?',(i+1,))
                    activate=cursor.fetchall()[0][0]
                    cursor.execute(f'SELECT notif FROM tokens WHERE id=?',(i+1,))
                    notif=cursor.fetchall()[0][0]
                    if activate==1:
                        connect.commit()
                        IsAnyActivate=True
                        if name=='None':
                            name=''
                        else:
                            name=f'\n–ò–º—è: `{name}`'
                        if notif==0:
                            notif='üî¥–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã'
                        else:
                            notif='üü¢–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã'
                        text=text+f'Id: `{i+1}`\nToken: `{token}`{name}\n{notif}\n\n'
                    if (maxTokens-i)==1:
                        break
                if IsAnyActivate:
                    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button1='üèö–ú–µ–Ω—é'
                    klava.add(button1)
                    bot.send_message(message.chat.id,text,parse_mode='Markdown')
                    choiceToken=bot.send_message(message.chat.id,'–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–æ–º - –≤–≤–µ–¥–∏ –µ–≥–æ Id –≤ —á–∞—Ç. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É',reply_markup=klava)
                    bot.register_next_step_handler(choiceToken,choiceToken_def)
                else:
                    bot.send_message(message.chat.id,'–£ —Ç–µ–±—è –Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤')
        elif message.text=='üèö–ú–µ–Ω—é':
            menu(message)
        elif message.text=='üí≤–ö—É—Ä—Å':
            global currency
            if currency=='':
                bot.send_message(message.chat.id,'–ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É')
            else:
                text='–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏/–ø—Ä–æ–¥–∞–∂–∏\n\n'
                for i in currency:
                    if i['currencyCodeA']==840 and i['currencyCodeB']==980:
                        text=f"{text}*$(–î–æ–ª–ª–∞—Ä)* `{i['rateBuy']}`/`{i['rateSell']}`\n"
                    elif i['currencyCodeA']==978 and i['currencyCodeB']==980:
                        text=f"{text}*‚Ç¨(–ï–≤—Ä–æ)* `{i['rateBuy']}`/`{i['rateSell']}`\n"
                bot.send_message(message.chat.id,text,parse_mode='Markdown')
            menu(message)
                    
def InputTokenForDel_def(message):
    if message.text=='üèö–ú–µ–Ω—é':
        menu(message)
    elif (message.text).isnumeric():
        connect = sqlite3.connect('tokens.db')
        cursor= connect.cursor()
        cursor.execute(f'SELECT token FROM tokens WHERE id=?',(message.text,))
        token=cursor.fetchone() 
        connect.commit()
        if token is None:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1='üèö–ú–µ–Ω—é'
            klava.add(button1)
            InputTokenForDel=bot.send_message(message.chat.id,'‚ö†Ô∏è–¢–∞–∫–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ!\n–í–≤–µ–¥–∏ Id —Ç–æ–∫–µ–Ω–∞:',reply_markup=klava)
            bot.register_next_step_handler(InputTokenForDel,InputTokenForDel_def)
        else:
            connect  = sqlite3.connect('tokens.db')
            cursor = connect.cursor()
            cursor.execute("UPDATE tokens SET activate = (?) WHERE id = (?)",(0,message.text,))
            connect.commit()
            bot.send_message(message.chat.id,'–¢–æ–∫–µ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã!')
            menu(message)
    else:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1='üèö–ú–µ–Ω—é'
        klava.add(button1)
        InputTokenForDel=bot.send_message(message.chat.id,'‚ö†Ô∏è–ê–π–¥–∏ - —á–∏—Å–ª–æ\n–í–≤–µ–¥–∏ Id —Ç–æ–∫–µ–Ω–∞:',reply_markup=klava)
        bot.register_next_step_handler(InputTokenForDel,InputTokenForDel_def)

                    
def choiceToken_def(message):
    global TokenList
    if message.text=='üèö–ú–µ–Ω—é':
        menu(message)
    elif (message.text).isnumeric():
        connect = sqlite3.connect('tokens.db')
        cursor= connect.cursor()
        cursor.execute(f'SELECT token FROM tokens WHERE id=?',(message.text,))
        token=cursor.fetchone() 
        connect.commit()
        if token is None:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1='üèö–ú–µ–Ω—é'
            klava.add(button1)
            choiceToken=bot.send_message(message.chat.id,'‚ö†Ô∏è–¢–æ–∫–µ–Ω–∞ —Å —Ç–∞–∫–∏–º Id –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\n–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–æ–º - –≤–≤–µ–¥–∏ –µ–≥–æ Id –≤ —á–∞—Ç. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É',reply_markup=klava)
            bot.register_next_step_handler(choiceToken,choiceToken_def)
        else:
            global TokenAct,IdAct
            TokenAct=token[0]
            try:
                user_info=TokenList[f'{token[0]}']
                connect  = sqlite3.connect('tokens.db')
                cursor = connect.cursor()
                cursor.execute(f'SELECT notif FROM tokens WHERE token=?',(TokenAct,))
                notif=cursor.fetchall()[0][0]
                connect.commit()
                if notif==0:
                    notifText='üî¥–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã'
                else:
                    notifText='üü¢–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã'
                bot.send_message(message.chat.id, f"–í–ª–∞–¥–µ–ª–µ—Ü —Ç–æ–∫–µ–Ω–∞: `{user_info['name']}`\n{notifText}",parse_mode='Markdown')
                text='üí≥–ö–∞—Ä—Ç—ã:\n\n'
                for i in user_info['accounts']:
                    balance=float(i['balance'])/100
                    if i['currencyCode']==840:
                        val='$'
                    elif i['currencyCode']==980:
                        val='‚Ç¥'
                    elif i['currencyCode']==978:
                        val='‚Ç¨'
                    else:
                        val=''
                    text=f"{text}–ö–∞—Ä—Ç–∞: `{i['maskedPan'][0]}`\n–ë–∞–ª–∞–Ω—Å: `{balance}{val}`\nId: `{i['id']}`\n\n"
                bot.send_message(message.chat.id, text,parse_mode='Markdown')
                text='ü´ô–ë–∞–Ω–∫–∏:\n\n'
                try:
                    for i in user_info['jars']:
                        balance=float(i['balance'])/100
                        text=f"{text}–ë–∞–Ω–∫–∞: `{i['title']}`\n–ë–∞–ª–∞–Ω—Å: `{balance}`\nId: `{i['id']}`\n\n"
                    bot.send_message(message.chat.id, text,parse_mode='Markdown')
                except:
                    bot.send_message(message.chat.id, f'{text}–£ –≤–∞—Å –Ω–µ—Ç –±–∞–Ω–æ–∫',parse_mode='Markdown')
                    
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1='üèö–ú–µ–Ω—é'
                if notif==0:
                    button2='‚úÖ–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
                else:
                    button2='‚ùå–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
                    
                global IdAct
                IdAct=message.text
                klava.add(button1,button2)
                coiceCard=bot.send_message(message.chat.id,'–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ - –≤–≤–µ–¥–∏ Id –∫–∞—Ä—Ç—ã/–±–∞–Ω–∫–∏',reply_markup=klava)
                bot.register_next_step_handler(coiceCard,choiceCard_def)
            except:
                bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É',parse_mode='Markdown')
                menu(message)
    else:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1='üèö–ú–µ–Ω—é'
        klava.add(button1)
        choiceToken=bot.send_message(message.chat.id,'‚ö†Ô∏è–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–æ–º - –≤–≤–µ–¥–∏ –µ–≥–æ Id –≤ —á–∞—Ç. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É',reply_markup=klava)
        bot.register_next_step_handler(choiceToken,choiceToken_def)

def choiceCard_def(message):
    global IdAct, TokenAct
    if message.text=='üèö–ú–µ–Ω—é':
        menu(message)
    elif message.text=='‚úÖ–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':#TokenAct
        connect  = sqlite3.connect('tokens.db')
        cursor = connect.cursor()
        cursor.execute("UPDATE tokens SET notif = (?) WHERE token = (?)",(1,TokenAct,))
        connect.commit()
        bot.send_message(message.chat.id,f'‚úÖ–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ç–æ–∫–µ–Ω–∞ `{TokenAct}` –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã!', parse_mode='Markdown')
        message.text=IdAct
        choiceToken_def(message)
    elif message.text=='‚ùå–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':#TokenAct
        connect  = sqlite3.connect('tokens.db')
        cursor = connect.cursor()
        cursor.execute("UPDATE tokens SET notif = (?) WHERE token = (?)",(0,TokenAct,))
        connect.commit()
        bot.send_message(message.chat.id,f'‚ùå–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ç–æ–∫–µ–Ω–∞ `{TokenAct}` –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã!', parse_mode='Markdown')
        message.text=IdAct
        choiceToken_def(message)
    else:
        user_info=TokenList[f'{TokenAct}']
        try:
            state=False
            for i in user_info['accounts']:
                if str(message.text)==str(i['id']):
                    balance=float(i['balance'])/100
                    text=f"üí≥–ö–∞—Ä—Ç–∞: `{i['maskedPan'][0]}`\n–ë–∞–ª–∞–Ω—Å: `{balance}`\nId: `{i['id']}`\nCreditLimit: `{i['creditLimit']}`\nType: `{i['type']}`\nIban: `{i['iban']}`\nCashbakType: `{i['cashbackType']}`\nSendId: `{i['sendId']}`\nCurrencyCode: `{i['currencyCode']}`"
                    state=True
                    break
            if state:
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1='üèö–ú–µ–Ω—é'
                klava.add(button1)
            else:
                for i in user_info['jars']:
                    if str(message.text)==str(i['id']):
                        balance=float(i['balance'])/100
                        text=f"ü´ô–ë–∞–Ω–∫–∞: `{i['title']}`\n–û–ø–∏—Å–∞–Ω–∏–µ: `{i['description']}`\n–ë–∞–ª–∞–Ω—Å: `{balance}`\nId: `{i['id']}`\nSendId: `{i['sendId']}`\nCurrencyCode: `{i['currencyCode']}`\nGoal: `{i['goal']}`"
                        state=True
                        break
            if state:
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1='üèö–ú–µ–Ω—é'
                klava.add(button1)
                bot.send_message(message.chat.id,text,reply_markup=klava,parse_mode='Markdown')
            else:
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1='üèö–ú–µ–Ω—é'
                klava.add(button1)
                coiceCard=bot.send_message(message.chat.id,'‚ö†Ô∏èId –Ω–µ –Ω–∞–π–¥–µ–Ω!\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –≤–≤–µ–¥–∏ Id –∫–∞—Ä—Ç—ã/–±–∞–Ω–∫–∏',reply_markup=klava)
                bot.register_next_step_handler(coiceCard,choiceCard_def)
                
        except:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1='üèö–ú–µ–Ω—é'
            klava.add(button1)
            coiceCard=bot.send_message(message.chat.id,'‚ö†Ô∏èId –Ω–µ –Ω–∞–π–¥–µ–Ω, –ª–∏–±–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞!\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –≤–≤–µ–¥–∏ Id –∫–∞—Ä—Ç—ã/–±–∞–Ω–∫–∏',reply_markup=klava)
            bot.register_next_step_handler(coiceCard,choiceCard_def)
       
def InputToken_def(message):
    if message.text=='üßê –ì–¥–µ –µ–≥–æ –≤–∑—è—Ç—å?':
        bot.send_photo(message.chat.id,'https://i.imgur.com/0RxBVof.png','–ü–æ–ª—É—á–∏—Ç—å API —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ —Ç—É—Ç - https://api.monobank.ua')
        klava=types.ReplyKeyboardRemove()
        InputToken=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ —Å–≤–æ–π API —Ç–æ–∫–µ–Ω:',reply_markup=klava)
        bot.register_next_step_handler(InputToken,InputToken_def)
    elif message.text=='üèö–ú–µ–Ω—é':
        menu(message)
    else:
        try:
            mono = monobank.Client(message.text)
            user_info = mono.get_client_info()
            TokenList[f'{message.text}']=user_info
            print(user_info)
            connect = sqlite3.connect('tokens.db')
            cursor= connect.cursor()
            cursor.execute(f'SELECT id FROM tokens WHERE token=?',(message.text,))
            token=cursor.fetchone() 
            cursor.execute(f'SELECT activate FROM tokens WHERE token=?',(message.text,))#–°–¥–µ–ª–∞–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞. –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –¥–± - –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –¥—Ä—É–≥–æ–π. –ü—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–¥–∞ —ç—Ç–æ –±—ã–ª —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± —É–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –±–¥ –±–µ–∑ –≥–µ–º–æ—Ä–∞
            activate=cursor.fetchone() 
            print(message.text)
            print(token)
            print(activate)
            if (token is None or activate[0] != 1):
                info=[message.text, 1, 0]
                cursor.execute('INSERT INTO tokens(token, activate, notif) VALUES (?, ?, ?);', info)
                connect.commit()
                klava=types.ReplyKeyboardMarkup(True)
                button1='üèÅ–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'
                klava.add(button1)
                setName=bot.send_message(message.chat.id,'–¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π –∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–æ—Ç–∞. –•–æ—á–µ—à—å –≤—ã–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—É –Ω–∞–∑–≤–∞–Ω–∏–µ? –ï—Å–ª–∏ –¥–∞ - –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —á–∞—Ç. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É',reply_markup=klava)
                global ApiToken
                ApiToken=message.text
                bot.register_next_step_handler(setName,setName_def)
            else:
                bot.send_message(message.chat.id,'–¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π, –Ω–æ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–æ—Ç–µ')
                
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1='üèö–ú–µ–Ω—é'
                klava.add(button1)
                InputToken=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ —Å–≤–æ–π API —Ç–æ–∫–µ–Ω:',reply_markup=klava)
                bot.register_next_step_handler(InputToken,InputToken_def)
        except:
            bot.send_message(message.chat.id,'–¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π, –ª–∏–±–æ —Ç—ã –¥–µ–ª–∞–µ—à—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ (–ª–∏–º–∏—Ç - 1 —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É)')
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1='üèö–ú–µ–Ω—é'
            klava.add(button1)
            InputToken=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ —Å–≤–æ–π API —Ç–æ–∫–µ–Ω:',reply_markup=klava)
            bot.register_next_step_handler(InputToken,InputToken_def)

def setName_def(message):
    global ApiToken
    if message.text=='üèÅ–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
        name='None'
        klava=types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id,f'–¢–æ–∫–µ–Ω: `{ApiToken}` –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω',reply_markup=klava,parse_mode='Markdown')
        menu(message)
    else:
        name=message.text
        bot.send_message(message.chat.id,f'–¢–æ–∫–µ–Ω: `{ApiToken}` —Å –∏–º–µ–Ω–µ–º `{name}` –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω',parse_mode='Markdown')
        menu(message)
    connect  = sqlite3.connect('tokens.db')
    cursor = connect.cursor()
    cursor.execute("UPDATE tokens SET name = (?) WHERE token = (?)",(name,ApiToken,))
    connect.commit()

def menu(message):
    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1='‚ûï–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω'
    button2='üóí–°–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤'
    button3='‚ûñ–£–¥–∞–ª–∏—Ç—å  —Ç–æ–∫–µ–Ω'
    button4='üí≤–ö—É—Ä—Å'
    klava.add(button1,button2,button3,button4)
    bot.send_message(message.chat.id,f'{message.from_user.first_name}, —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –º–µ–Ω—é:',reply_markup=klava)

def starter():
    while True:
        connect  = sqlite3.connect('tokens.db')
        cursor = connect.cursor()
        cursor.execute(f'SELECT COUNT (id) FROM tokens')
        connect.commit()
        maxTokens=cursor.fetchall()[0][0]
        
        global TokenList,BalanceAct,currency
        BalanceActNew={}#–ù–æ–≤—ã–π–ë–∞–ª–∞–Ω—Å–ê–∫—Ç
        time.sleep(90)
        for i in  range(maxTokens):
            try:
                connect  = sqlite3.connect('tokens.db')
                cursor = connect.cursor()
                cursor.execute(f'SELECT activate FROM tokens WHERE id=?',(i+1,))
                activate=cursor.fetchall()[0][0]
                connect.commit()
                if activate==1:
                    connect  = sqlite3.connect('tokens.db')
                    cursor = connect.cursor()
                    cursor.execute(f'SELECT token FROM tokens WHERE id=?',(i+1,))
                    token=cursor.fetchall()[0][0]
                    cursor.execute(f'SELECT notif FROM tokens WHERE id=?',(i+1,))
                    notif=cursor.fetchall()[0][0]
                    connect.commit()
                    
                    mono = monobank.Client(token)
                    user_info = mono.get_client_info()
                    TokenList[f'{token}']=user_info
                    #BalanceAct
                    if notif==1:
                        for i2 in user_info['accounts']:
                            balance=float(i2['balance'])/100
                            BalanceActNew[f"{i2['id']}"]=[i2['maskedPan'][0],balance,'–∫–∞—Ä—Ç–µ']
                        try:
                            for i2 in user_info['jars']:
                                balance=float(i2['balance'])/100
                                BalanceActNew[f"{i2['title']}"]=[i2['maskedPan'][0],balance,'–±–∞–Ω–∫–µ']
                        except:
                            pass
                        
                        if len(BalanceAct)==0:
                            BalanceAct=BalanceActNew
                        else:
                            for i3 in BalanceActNew:
                                print(BalanceActNew[i3][1])
                                if BalanceActNew[i3][1]>BalanceAct[i3][1]:
                                    bot.send_message(AdminId,f'–ù–∞ {BalanceActNew[i3][2]} `{BalanceActNew[i3][0]}` *+{round(float(BalanceActNew[i3][1])-float(BalanceAct[i3][1]),2)} –≥—Ä–Ω.*!',parse_mode='Markdown')
                                print('–ù–µ –±—ã–ª–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π')
                        BalanceAct=BalanceActNew
                    currency=mono.get_currency()
            except:
                print('oshibka yopta')

            if (maxTokens-i)==1:
                break

if __name__ == '__main__':
    t2 = threading.Thread(target=starter)
    t2.start()
    bot.polling(none_stop=True)
